/* eslint-disable */
!function o(f, u, l) {
function s(r, e) {
if (!u[r]) {
if (!f[r]) {
var t = "function" == typeof require && require;
if (!e && t) return t(r, !0);
if (c) return c(r, !0);
var n = new Error("Cannot find module '" + r + "'");
throw n.code = "MODULE_NOT_FOUND", n;
}
var i = u[r] = {
exports: {}
};
f[r][0].call(i.exports, function(e) {
return s(f[r][1][e] || e);
}, i, i.exports, o, f, u, l);
}
return u[r].exports;
}
for (var c = "function" == typeof require && require, e = 0; e < l.length; e++) s(l[e]);
return s;
}({
1: [ function(e, r, t) {
(function(e) {
"use strict";
var r = e.rcmail, t = e.rcube_find_object;
r && r.addEventListener("init", function(e) {
r.register_command("plugin.filters-delete", function() {
return r.goto_url("plugin.filters-delete");
}, !0), r.register_command("plugin.filters-save", function() {
var e = t("_searchstring");
e && "" === e.value ? (alert(r.gettext("nosearchstring", "filters")), e.focus()) : r.gui_objects.filtersform.submit();
}, !0);
});
}).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
}, {} ]
}, {}, [ 1 ]);
